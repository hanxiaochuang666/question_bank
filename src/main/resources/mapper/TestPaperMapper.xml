<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.eblcu.questionbank.persistence.dao.ITestPaperDao">
  <resultMap id="BaseResultMap" type="cn.eblcu.questionbank.persistence.entity.dto.TestPaper">
    <id column="test_paper_id" jdbcType="INTEGER" property="testPaperId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_one" jdbcType="INTEGER" property="categoryOne" />
    <result column="category_two" jdbcType="INTEGER" property="categoryTwo" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="use_type" jdbcType="TINYINT" property="useType" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_score" jdbcType="TINYINT" property="isScore" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="form_type" jdbcType="INTEGER" property="formType" />
    <result column="export_path" jdbcType="VARCHAR" property="exportPath" />
    <result column="export_time" jdbcType="TIMESTAMP" property="exportTime" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    test_paper_id, name, category_one, category_two, course_id, course_name, use_type, 
    time, start_time, end_time, is_score, total_score, form_type, export_path, export_time, 
    org_id, create_user, create_time, update_user, update_time
  </sql>
  <sql id="BaseWhere">
    	<if test="!@org.springframework.util.StringUtils@isEmpty(entityKeyValues)">
			and test_paper_id in
			<foreach item="item" index="index" collection="entityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(notEntityKeyValues)">
			and test_paper_id not in
			<foreach item="item" index="index" collection="notEntityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(testPaperId)">
			and test_paper_id=#{testPaperId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(name)">
			and name=#{name,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(categoryOne)">
			and category_one=#{categoryOne,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(categoryTwo)">
			and category_two=#{categoryTwo,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(courseId)">
			and course_id=#{courseId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(courseName)">
			and course_name=#{courseName,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(useType)">
			and use_type=#{useType,jdbcType=TINYINT}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(time)">
			and time=#{time,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(startTime)">
			and start_time=#{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(endTime)">
			and end_time=#{endTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(isScore)">
			and is_score=#{isScore,jdbcType=TINYINT}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(totalScore)">
			and total_score=#{totalScore,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(formType)">
			and form_type=#{formType,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(exportPath)">
			and export_path=#{exportPath,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(exportTime)">
			and export_time=#{exportTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(orgId)">
			and org_id=#{orgId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(createUser)">
			and create_user=#{createUser,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(createTime)">
			and create_time=#{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(updateUser)">
			and update_user=#{updateUser,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(updateTime)">
			and update_time=#{updateTime,jdbcType=TIMESTAMP}
		</if>

  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long">
    	select count(1) from test_paper
		<where>
			<include refid="BaseWhere" />
		</where>
  </select>
  <select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
    	select
		<include refid="Base_Column_List"/> 
		from test_paper
		<where>
			<include refid="BaseWhere"/>
		</where>
		<include refid="cn.eblcu.questionbank.common.orderSqlMap" /> 
		<include refid="cn.eblcu.questionbank.common.pageSqlMap" /> 
  </select>
  <delete id="deleteByParams" parameterType="java.util.Map">
    	delete from test_paper
		<where>
			<include refid="BaseWhere"/>
		</where>
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_paper
    where test_paper_id = #{testPaperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_paper
    where test_paper_id = #{testPaperId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaper">
    insert into test_paper (test_paper_id, name, category_one, 
      category_two, course_id, course_name, 
      use_type, time, start_time, 
      end_time, is_score, total_score, 
      form_type, export_path, export_time, 
      org_id, create_user, create_time, 
      update_user, update_time)
    values (#{testPaperId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{categoryOne,jdbcType=INTEGER}, 
      #{categoryTwo,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, 
      #{useType,jdbcType=TINYINT}, #{time,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{isScore,jdbcType=TINYINT}, #{totalScore,jdbcType=INTEGER},
      #{formType,jdbcType=INTEGER}, #{exportPath,jdbcType=VARCHAR}, #{exportTime,jdbcType=TIMESTAMP},
      #{orgId,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaper"
          useGeneratedKeys="true" keyProperty="testPaperId" keyColumn="test_paper_id">
    insert into test_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testPaperId != null">
        test_paper_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryOne != null">
        category_one,
      </if>
      <if test="categoryTwo != null">
        category_two,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="useType != null">
        use_type,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isScore != null">
        is_score,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="formType != null">
        form_type,
      </if>
      <if test="exportPath != null">
        export_path,
      </if>
      <if test="exportTime != null">
        export_time,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testPaperId != null">
        #{testPaperId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryOne != null">
        #{categoryOne,jdbcType=INTEGER},
      </if>
      <if test="categoryTwo != null">
        #{categoryTwo,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        #{useType,jdbcType=TINYINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isScore != null">
        #{isScore,jdbcType=TINYINT},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="formType != null">
        #{formType,jdbcType=INTEGER},
      </if>
      <if test="exportPath != null">
        #{exportPath,jdbcType=VARCHAR},
      </if>
      <if test="exportTime != null">
        #{exportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaper">
    update test_paper
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryOne != null">
        category_one = #{categoryOne,jdbcType=INTEGER},
      </if>
      <if test="categoryTwo != null">
        category_two = #{categoryTwo,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        use_type = #{useType,jdbcType=TINYINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isScore != null">
        is_score = #{isScore,jdbcType=TINYINT},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="formType != null">
        form_type = #{formType,jdbcType=INTEGER},
      </if>
      <if test="exportPath != null">
        export_path = #{exportPath,jdbcType=VARCHAR},
      </if>
      <if test="exportTime != null">
        export_time = #{exportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where test_paper_id = #{testPaperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaper">
    update test_paper
    set name = #{name,jdbcType=VARCHAR},
      category_one = #{categoryOne,jdbcType=INTEGER},
      category_two = #{categoryTwo,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      use_type = #{useType,jdbcType=TINYINT},
      time = #{time,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_score = #{isScore,jdbcType=TINYINT},
      total_score = #{totalScore,jdbcType=INTEGER},
      form_type = #{formType,jdbcType=INTEGER},
      export_path = #{exportPath,jdbcType=VARCHAR},
      export_time = #{exportTime,jdbcType=TIMESTAMP},
      org_id = #{orgId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where test_paper_id = #{testPaperId,jdbcType=INTEGER}
  </update>
</mapper>