<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.eblcu.questionbank.persistence.dao.TestPaperQuestionMapper">
  <resultMap id="BaseResultMap" type="cn.eblcu.questionbank.persistence.entity.dto.TestPaperQuestion">
    <id column="test_paper_question_id" jdbcType="INTEGER" property="testPaperQuestionId" />
    <result column="test_pager_id" jdbcType="INTEGER" property="testPagerId" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="resolve" jdbcType="VARCHAR" property="resolve" />
  </resultMap>
  <sql id="Base_Column_List">
    test_paper_question_id, test_pager_id, question_id, sort, resolve
  </sql>
  <sql id="BaseWhere">
    	<if test="!@org.springframework.util.StringUtils@isEmpty(entityKeyValues)">
			and test_paper_question_id in
			<foreach item="item" index="index" collection="entityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(notEntityKeyValues)">
			and test_paper_question_id not in
			<foreach item="item" index="index" collection="notEntityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(testPaperQuestionId)">
			and test_paper_question_id=#{testPaperQuestionId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(testPagerId)">
			and test_pager_id=#{testPagerId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(questionId)">
			and question_id=#{questionId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(sort)">
			and sort=#{sort,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(resolve)">
			and resolve=#{resolve,jdbcType=VARCHAR}
		</if>

  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long">
    	select count(1) from test_paper_question
		<where>
			<include refid="BaseWhere" />
		</where>
  </select>
  <select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
    	select
		<include refid="Base_Column_List"/> 
		from test_paper_question
		<where>
			<include refid="BaseWhere"/>
		</where>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_paper_question
    where test_paper_question_id = #{testPaperQuestionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_paper_question
    where test_paper_question_id = #{testPaperQuestionId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaperQuestion">
    insert into test_paper_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testPaperQuestionId != null">
        test_paper_question_id,
      </if>
      <if test="testPagerId != null">
        test_pager_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="resolve != null">
        resolve,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testPaperQuestionId != null">
        #{testPaperQuestionId,jdbcType=INTEGER},
      </if>
      <if test="testPagerId != null">
        #{testPagerId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        #{resolve,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.eblcu.questionbank.persistence.entity.dto.TestPaperQuestion">
    update test_paper_question
    <set>
      <if test="testPagerId != null">
        test_pager_id = #{testPagerId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        resolve = #{resolve,jdbcType=VARCHAR},
      </if>
    </set>
    where test_paper_question_id = #{testPaperQuestionId,jdbcType=INTEGER}
  </update>
</mapper>